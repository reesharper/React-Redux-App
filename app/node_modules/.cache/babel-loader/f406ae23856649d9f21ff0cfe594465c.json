{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\web36\\\\React-Redux-App\\\\app\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchJokes } from './actions/actions';\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.isLoading,\n    missions: state.missionsData,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchJokes\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/web36/React-Redux-App/app/src/App.js"],"names":["React","useEffect","connect","fetchJokes","App","mapStateToProps","state","isLoading","missions","missionsData","error"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQA,G;;AAUT,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADZ;AAELC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,YAFX;AAGLC,IAAAA,KAAK,EAAEJ,KAAK,CAACI;AAHR,GAAP;AAKD,CAND;;AAQA,eAAeR,OAAO,CAACG,eAAD,EAAkB;AAAEF,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,GAAzC,CAAf","sourcesContent":["\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchJokes } from './actions/actions'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      </header>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.isLoading,\n    missions: state.missionsData,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchJokes })(App);\n"]},"metadata":{},"sourceType":"module"}